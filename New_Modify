---
- name: Detect and Execute OS-specific tasks
  hosts: all
  gather_facts: yes
  vars:
    domain_name: wikilab.asia
    username: "sainath@wikilab.asia"
    password: "Redhat123"
    # whitelist_users: "{{whitelist_users_awx}}"
    # whitelist_groups: "{{whitelist_groups_awx}}"
    ansible_python_interpreter: /usr/bin/python3.6

  tasks:

    - name: Gather OS version and distribution facts
      debug:
        var: ansible_distribution_version
      register: os_version

    - name: Extract OS major version from facts
      set_fact:
        ansible_distribution_major_version: "{{ ansible_distribution_version.split('.')[0] }}"

    - name: Print the OS major version
      debug:
        var: ansible_distribution_major_version

    - name: Get realm list
      shell: realm list
      register: check_realm
      when: ansible_distribution_major_version|int != 6

  
    - name: Checking..... (Skipping means not Joined)
      debug:
        msg: "System is already joined to a realm"
      when: check_realm.rc == 0 and check_realm.stdout.strip() != ""


    #Install necessary packages
    - name: Install realm package along with sssd
      package:
        name: "{{ item }}"
        state: latest
      with_items:
        - realmd
        - adcli
        - sssd
        - authconfig
        - oddjob
        - oddjob-mkhomedir
        - samba-common-tools
        - lsof
      when: not check_realm.rc == 0 or check_realm.stdout.strip() == ""



    - name: Join domain (RHEL 6 compatible)
      shell: echo -n "{{password}}" | adcli join {{domain_name}} -U {{username}} -v --stdin-password
      register: join_domain
      ignore_errors: yes
      no_log: True
      when: ansible_distribution_major_version|int == 6 and not check_realm.rc == 0 or check_realm.stdout.strip() == ""

    - name: Join domain (RHEL 7, 8, etc.)
      shell: echo "{{password}}" | realm join {{domain_name}} -U {{username}} --verbose
      register: join_domain
      ignore_errors: yes
      when: ansible_distribution_major_version|int != 6 and not check_realm.rc == 0 or check_realm.stdout.strip() == ""

    - name: login and print the working directory via ssh
      shell: id {{username}}
      register: id
      ignore_errors: yes
      when: ansible_distribution_major_version|int != 6 and not check_realm.rc == 0 or check_realm.stdout.strip() == ""


    - name: print the value
      debug:
        var: id.stdout_lines
      when: ansible_distribution_major_version|int != 6 and not check_realm.rc == 0 or check_realm.stdout.strip() == ""

    - name: login Before Blacklisting
      shell: sshpass -p "{{password}}" ssh {{username}}@localhost pwd
      register: ssh
      when: ansible_distribution_major_version|int != 6 and not check_realm.rc == 0 or check_realm.stdout.strip() == ""

    - name: print the value of login Before Blacklisting
      debug:
        var: ssh.stdout_lines
      when: ansible_distribution_major_version|int != 6 and not check_realm.rc == 0 or check_realm.stdout.strip() == ""
    - name: Blacklisting all Users
      shell: realm permit -x {{username}}
      when: ansible_distribution_major_version|int != 6 and not check_realm.rc == 0 or check_realm.stdout.strip() == ""


    - name: login via ssh to user After Blacklisting
      shell: sshpass -p "{{password}}" ssh sainath@localhost pwd
      register: ssh
      ignore_errors: yes
      when: ansible_distribution_major_version|int != 6 and not check_realm.rc == 0 or check_realm.stdout.strip() == ""
    - name: Print message based on SSH exit code (improved)
      debug:
        msg: "{{ 'All Users are blacklisted' if ssh.rc == 255 else 'Permission Denied' }}"  # Conditional message
      when: ssh.rc in (255, 5) and ansible_distribution_major_version|int != 6 and not check_realm.rc == 0 or check_realm.stdout.strip() == ""


