---
- name: Detect and Execute SUSE 12 & 15 OS-specific tasks
  hosts: all
  gather_facts: yes
  vars:
    domain_name: "wikilab.asia"
    username: "sainath@wikilab.asia"
    password: "Q@erty123"

  tasks:
    - name: Check if running on SUSE 12 & 15
      fail:
        msg: "This playbook only runs on SUSE 12 & 15 servers."
      when: ansible_distribution_major_version | int not in [12, 15]
      tags: always
      
    - name: Gather OS version and distribution facts
      debug:
        var: ansible_distribution_version
      register: os_version

    - name: Extract OS major version from facts
      set_fact:
        ansible_distribution_major_version: "{{ ansible_distribution_version.split('.')[0] }}"

    - name: Print the OS major version
      debug:
        var: ansible_distribution_major_version

    # Prechecks to Join Domain       
    - name: Check if user sainath
      shell: getent passwd sainath
      register: check_user
      changed_when: False
      ignore_errors: True
    
    - name: Print failure message if AD user check failed
      debug:
        msg: "Check failed: AD user 'sainath' does not exist on {{ ansible_facts['fqdn'] }}"
      when: check_user.rc != 0

    - name: Check if LDAP port is in use
      shell: lsof -i:636
      register: check_ldap
      changed_when: False
      ignore_errors: True
    
    - name: Print failure message if LDAP port check failed
      debug:
        msg: "Check failed: LDAP port 636 is not listening on {{ ansible_facts['fqdn'] }}"
      when: check_ldap.rc != 0 
      
    - name: Exit the playbook if Server Already Joined Domain
      fail:
        msg: "This Server Already Joined Domain."
      when: check_user.rc == 0 and check_ldap.rc == 0
      changed_when: False
      tags: always

    - name: Modify ldap Configuration
      copy:
        src: testfolder/ldap.conf_suse
        dest: /etc/openldap/ldap.conf
        mode: "0644"
          
    - name: Copy LDAP CERT
      copy:
        src: testfolder/LDAPS_CERT8.cer
        dest: /etc/openldap/
    
    # Install packages on SLES 12
    - name: Install packages on SLES 12
      when: ansible_distribution_major_version | int == 12
      block:
        - name: Install packages on SLES 12
          command: zypper --non-interactive install adcli sssd sssd-ldap sssd-ad sssd-tools
          changed_when: False
          
        - name: Copy realm RPM file to temporary directory
          copy:
            src: testfolder/realmd-0.16.3-lp151.2.4.x86_64.rpm
            dest: /tmp/realmd-0.16.3-lp151.2.4.x86_64.rpm

        - name: Install realm RPM using rpm command
          command: zypper --non-interactive install /tmp/realmd-0.16.3-lp151.2.4.x86_64.rpm
          changed_when: False

        - name: Join domain
          shell: echo -n "{{ password }}" | adcli join {{ domain_name }} -U sainath -v --stdin-password
          register: join_domain
          changed_when: False
          ignore_errors: yes
          #no_log: true

        - name: Modify SSSD Configuration
          copy:
            src: testfolder/sssd.conf_rhel6
            dest: /etc/sssd/sssd.conf
            mode: "0600"
         
        - name: Disable NSCD socket
          service:
            name: nscd
            enabled: no
            state: stopped

        - name: Take a backup of the original nsswitch.conf file
          copy:
            src: /etc/nsswitch.conf
            dest: /etc/nsswitch.conf.backup__{{ ansible_date_time.date }}_{{ ansible_date_time.time }}
            remote_src: yes
            backup: yes

        - name: Update nsswitch.conf configuration file
          ansible.builtin.replace:
            path: /etc/nsswitch.conf
            regexp: "{{ item.regexp }}"
            replace: "{{ item.replace }}"
          loop:
            - { regexp: '^passwd:.*', replace: 'passwd: compat sss' }
            - { regexp: '^group:.*', replace: 'group: compat sss' }
            - { regexp: '^shadow:.*', replace: 'shadow: compat sss' }
           
        - name: Add pam-config for SSS
          command: pam-config -a --sss
          
        - name: Add pam-config for creating home directories
          command: pam-config -a --mkhomedir

        - name: Restart sssd
          service:
            name: sssd
            state: restarted

    # Install packages on SLES 15     
    - name: Install packages on SLES 15
      when: ansible_distribution_major_version | int == 15
      block:
        - name: Install packages on SLES 15
          command: zypper --non-interactive install adcli sssd sssd-ldap sssd-ad sssd-tools realmd

        - name: Join domain
          shell: echo -n "{{ password }}" | adcli join {{ domain_name }} -U sainath -v --stdin-password
          register: join_domain
          changed_when: False
          ignore_errors: yes
          #no_log: true

        - name: Modify SSSD Configuration
          copy:
            src: testfolder/sssd.conf_rhel6
            dest: /etc/sssd/sssd.conf
            mode: "0600"

        - name: Restart sssd
          service:
            name: sssd
            state: restarted        

    # Post validation of Join Domain
    - name: Copy both sshpass RPM files to /tmp
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      with_items:
        - { src: 'testfolder/sshpass-1.06-2.1.x86_64.rpm', dest: '/tmp/' }
        - { src: 'testfolder/sshpass-1.06-bp153.1.16.x86_64.rpm', dest: '/tmp/' }
        
    - name: Install sshpass package
      shell: |
        if [ "{{ ansible_distribution_major_version | int }}" -eq 12 ]; then
          zypper --non-interactive install /tmp/sshpass-1.06-2.1.x86_64.rpm
        elif [ "{{ ansible_distribution_major_version | int }}" -eq 15 ]; then
          zypper --non-interactive install /tmp/sshpass-1.06-bp153.1.16.x86_64.rpm
        fi
      when: ansible_distribution_major_version | int in [12, 15]
      changed_when: False
      
    - name: Check ID for AD user
      shell: getent passwd sainath
      register: check_user
      changed_when: False
      ignore_errors: True

    - name: Print result ID for AD user
      debug:
        msg: >-
          {% if check_user.rc != 0 %}
          Check failed: AD user 'sainath' does not exist on {{ ansible_facts['fqdn'] }}
          {% else %}
          Check Pass: AD user 'sainath' exist on {{ ansible_facts['fqdn'] }}
          {% endif %}
    
    - name: Check if LDAP port is in use
      shell: lsof -i:636
      register: check_ldap
      changed_when: False
      ignore_errors: True

    - name: Print result LDAP port is in use
      debug:
        msg: >-
          {% if check_ldap.rc != 0 %}
          Check failed: LDAP port 636 is not listening on {{ ansible_facts['fqdn'] }}
          {% else %}
          Check Pass: LDAP port 636 is listening on {{ ansible_facts['fqdn'] }}
          {% endif %}

    - name: login AD user Account 
      shell: sshpass -p "{{password}}" ssh {{username}}@localhost pwd
      register: ssh
      ignore_errors: True

    - name: Print result LDAP port is in use
      debug:
        msg: >-
          {% if ssh.rc != 0 %}
          Check failed: Unable to login as AD user '{{ username }}' on {{ ansible_facts['fqdn'] }}
          {% else %}
          Check Pass: Login as AD user '{{ username }}' on {{ ansible_facts['fqdn'] }}"
          {% endif %}

    - name: Print result of all checks
      debug:
        msg: >-
          {% if check_user.rc == 0 and check_ldap.rc == 0 and ssh.rc == 0 %}
          Successfully joined server {{ ansible_facts['fqdn'] }} to the domain
          {% else %}
          Failed joined server {{ ansible_facts['fqdn'] }} to the domain, Check manually.
          {% endif %}
        
